{"version":3,"sources":["components/Statistics/Statistics.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss","components/Section/Section.module.scss","components/Container/Container.module.scss","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/Container/Container.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","styles","feedbackBtnWrapper","map","option","feedbackBtn","onClick","Statistics","good","neutral","bad","total","positivePercentage","statisticsList","statisticsItem","statisticsText","Section","title","children","sectionTitle","Notification","message","Container","App","state","countLeftFeedbackHandler","value","setState","prevState","countTotalFeedback","arrayOfValues","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","keys","Object","values","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2cc529a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__aA3PZ\",\"statisticsItem\":\"Statistics_statisticsItem__3rfDy\",\"statisticsText\":\"Statistics_statisticsText__3dMwr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtnWrapper\":\"FeedbackOptions_feedbackBtnWrapper__2Yhdd\",\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__3_60w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__3n-pr\",\"sectionTitle\":\"Section_sectionTitle__3J7KB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__bOWjx\"};","import PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.scss\"\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={styles.feedbackBtnWrapper}>\r\n    {options.map((option) => (\r\n      <button\r\n        className={styles.feedbackBtn}\r\n        key={option}\r\n        onClick={() => onLeaveFeedback(`${option}`)}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.scss\"\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className={styles.statisticsList}>\r\n    <li className={styles.statisticsItem}>\r\n      <span className={styles.statisticsText}>Good: </span>\r\n      {good}\r\n    </li>\r\n    <li className={styles.statisticsItem}>\r\n      <span className={styles.statisticsText}>Neutral: </span>\r\n      {neutral}\r\n    </li>\r\n    <li className={styles.statisticsItem}>\r\n      <span className={styles.statisticsText}>Bad: </span>\r\n      {bad}\r\n    </li>\r\n    <li className={styles.statisticsItem}>\r\n      <span className={styles.statisticsText}>Total: </span>\r\n      {total}\r\n    </li>\r\n    <li className={styles.statisticsItem}>\r\n      <span className={styles.statisticsText}>Positive feedback: </span>\r\n      {positivePercentage}%\r\n    </li>\r\n  </ul>\r\n);\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;","import PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.scss\"\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.Section}>\r\n    <h2 className={styles.sectionTitle}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;","import PropTypes from \"prop-types\";\r\nimport styles from \"./Container.module.scss\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","import { Component } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\nimport Container from \"./components/Container/Container\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  countLeftFeedbackHandler = (value) => {\n    this.setState((prevState) => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  countTotalFeedback = (arrayOfValues) =>\n    arrayOfValues.reduce((acc, value) => acc + value, 0);\n\n  countPositiveFeedbackPercentage = (good, total) =>\n    Math.round((good / total) * 100);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const keys = Object.keys(this.state);\n    const values = Object.values(this.state);\n    const total = this.countTotalFeedback(values);\n    const positivePercentage = this.countPositiveFeedbackPercentage(\n      good,\n      total\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>React hw 2 - Feedback </h1>\n        <Container>\n          <Section title=\"Please leave feedback\">\n            <FeedbackOptions\n              options={keys}\n              onLeaveFeedback={this.countLeftFeedbackHandler}\n            />\n          </Section>\n\n          <Section title=\"Statistics\">\n            {total > 0 ? (\n              <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={total}\n                positivePercentage={positivePercentage}\n              />\n            ) : (\n              <Notification message=\"No feedback given\" />\n            )}\n          </Section>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}